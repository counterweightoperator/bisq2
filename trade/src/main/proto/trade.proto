/*
 * This file is part of Bisq.
 *
 * Bisq is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or (at
 * your option) any later version.
 *
 * Bisq is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Bisq. If not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto3";

package trade;
option java_package = "bisq.trade.protobuf";
option java_multiple_files = true;

import "offer.proto";
import "network.proto";
import "contract.proto";
import "identity.proto";

message TradeParty {
  network.NetworkId networkId = 1;
  optional contract.ContractSignatureData contractSignatureData = 2;
  oneof message {
    BisqEasyTradeParty bisqEasyTradeParty = 20;
    MultisigTradeParty multisigTradeParty = 21;
    SubmarineTradeParty submarineTradeParty = 22;
  }
}

enum TradeRole{
  BUYER_AS_TAKER = 0;
  BUYER_AS_MAKER = 1;
  SELLER_AS_TAKER = 2;
  SELLER_AS_MAKER = 3;
}
message Trade {
  string state = 1;
  string id = 2;
  TradeRole tradeRole = 3;
  identity.Identity myIdentity = 4;
  contract.Contract contract = 5;
  TradeParty taker = 6;
  TradeParty maker = 7;

  oneof message {
    BisqEasyTrade bisqEasyTrade = 20;
    MultisigTrade multisigTrade = 21;
    SubmarineTrade submarineTrade = 22;
  }
}
message TradeMessage {
  string tradeId = 1;
  network.NetworkId sender = 2;
  network.MetaData metaData = 3;
  oneof message {
    BisqEasyTradeMessage bisqEasyTradeMessage = 20;
    SubmarineTradeMessage submarineTradeMessage = 21;
    MultisigTradeMessage multisigTradeMessage = 23;
  }
}

// BisqEasy
message BisqEasyTradeParty {
}

message BisqEasyTrade {
  optional string paymentAccountData = 1;
  optional string btcAddress = 2;
  optional string txId = 3;
}

message BisqEasyTradeStore {
  map<string, Trade> tradeById = 1;
}

// BisqEasy messages
message BisqEasyTradeMessage {
  oneof message {
    BisqEasyTakeOfferRequest bisqEasyTakeOfferRequest = 20;
    BisqEasyTakeOfferResponse bisqEasyTakeOfferResponse = 21;
    BisqEasyAccountDataMessage bisqEasyAccountDataMessage = 22;
    BisqEasyConfirmFiatSentMessage bisqEasyConfirmFiatSentMessage = 23;
    BisqEasyBtcAddressMessage bisqEasyBtcAddressMessage = 24;
    BisqEasyConfirmFiatReceiptMessage bisqEasyConfirmFiatReceiptMessage = 25;
    BisqEasyConfirmBtcSentMessage bisqEasyConfirmBtcSentMessage = 26;
  }
}
message BisqEasyTakeOfferRequest {
  contract.Contract bisqEasyContract = 1;
  contract.ContractSignatureData contractSignatureData = 2;
}
message BisqEasyTakeOfferResponse {
  contract.ContractSignatureData contractSignatureData = 1;
}
message BisqEasyAccountDataMessage {
  string paymentAccountData = 1;
}
message BisqEasyConfirmFiatSentMessage {
}
message BisqEasyBtcAddressMessage {
  string btcAddress = 1;
}
message BisqEasyConfirmFiatReceiptMessage {
}
message BisqEasyConfirmBtcSentMessage {
  string txId = 1;
}

// MultiSig
message MultisigTradeMessage{
}
message MultisigTradeParty {
}

message MultisigTrade {
}

message MultisigTradeStore {
  map<string, Trade> tradeById = 1;
}


// Submarine
message SubmarineTradeMessage {
}
message SubmarineTradeParty {
}

message SubmarineTrade {
}

message SubmarineTradeStore {
  map<string, Trade> tradeById = 1;
}
